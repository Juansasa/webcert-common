angular.module("common",["ui.bootstrap","ngCookies","ngRoute","ngSanitize"]),angular.module("common").run(["common.messageService",function(messageService){"use strict";messageService.addResources(commonMessages)}]);var commonMessages={sv:{"common.yes":"Ja","common.no":"Nej","common.yes.caps":"JA","common.no.caps":"NEJ","common.nodontask":"Nej, fråga inte igen","common.ok":"OK","common.cancel":"Avbryt","common.goback":"Tillbaka","common.sign":"Signera","common.send":"Skicka","common.copy":"Kopiera","common.delete":"Ta bort","common.date":"Datum","common.modal.label.discard_draft":"Ta bort utkast","common.modal.label.confirm_sign":"Signera intyget","cert.status.draft_incomplete":"Utkast, ej komplett","cert.status.draft_complete":"Utkast, komplett","cert.status.signed":"Signerat","cert.status.cancelled":"Makulerat","cert.status.unknown":"Okänd","cert.status.sent":"Skickat","cert.status.received":"Mottaget","nav.label.loggedinas":"Inloggad som:","modal.title.markforward":"Markera som vidarebefordrad?","qa.status.pending_internal_action":"Kräver svar","qa.status.pending_external_action":"Inväntar svar","qa.status.answered":"Besvarat","qa.status.closed":"Hanterat","qa.fragestallare.fk":"Försäkringskassan","qa.fragestallare.wc":"Vårdenheten","qa.amne.paminnelse":"Påminnelse","qa.amne.arbetstidsforlaggning":"Arbetstidsförläggning","qa.amne.kontakt":"Kontakt","qa.amne.avstamningsmote":"Avstämningsmöte","qa.amne.komplettering_av_lakarintyg":"Komplettering av läkarintyg","qa.amne.makulering_av_lakarintyg":"Makulering av läkarintyg","qa.amne.ovrigt":"Övrigt","qa.measure.svarfranvarden":"Svara","qa.measure.svarfranfk":"Invänta svar från Försäkringskassan","qa.measure.komplettering":"Komplettera","qa.measure.markhandled":"Markera som hanterad","qa.measure.handled":"Ingen","modules.label.field":"Fält","modules.label.blank":"- ej ifyllt","modules.button.alt.archive":"Arkivera intyget. Flyttar intyget till Arkiverade intyg","info.loadingcertificate":"Hämtar intyget...","common.error.unknown":"<strong>Tekniskt fel</strong>","common.error.cantconnect":"Kunde inte kontakta servern","common.error.certificatenotfound":"Intyget finns inte","common.error.certificateinvalid":"Intyget är inte korrekt ifyllt","common.error.signerror":"Intyget kunde inte signeras. Försök igen.","common.error.data_not_found":"<strong>Intyget kunde inte hittas.</strong><br>Intyget är borttaget eller så saknas behörighet."},en:{"common.ok":"OK","common.cancel":"Cancel"}};angular.module("common").controller("common.SendCertWizardCtrl",["$filter","$location","$rootScope","$routeParams","$scope","minaintyg.listCertService","minaintyg.sendCertService",function($filter,$location,$rootScope,$routeParams,$scope,listCertService,sendCertService){"use strict";var params=$location.search();return $scope.module=params.module,void 0===$scope.selectedRecipientId&&($scope.selectedRecipientId=params.defaultRecipient),$scope.sendingInProgress=!1,$scope.cert=$rootScope.cert,angular.isObject($scope.cert)?($scope.downloadAsPdfLink="/moduleapi/certificate/"+$scope.cert.id+"/pdf",$rootScope.selectedRecipientId=$scope.selectedRecipientId,$scope.recipientList=[],sendCertService.getRecipients($scope.module,function(result){if(null!==result&&result.length>0)for(var i=0;i<result.length;++i)$scope.recipientList[i]={id:result[i].id,recipientName:result[i].name};else $location.path($scope.module+"/fel/failedreceiverecipients")},function(){$location.path($scope.module+"/fel/failedreceiverecipients")}),$scope.getRecipientName=function(id){for(var i=0;i<$scope.recipientList.length;i++){var recipient=$scope.recipientList[i];if(recipient.id===id)return recipient.recipientName}},$scope.confirmRecipientSelection=function(){$rootScope.selectedRecipientId=$scope.selectedRecipientId,$location.path($scope.module+"/summary")},$scope.confirmAndSend=function(){$scope.sendingInProgress=!0,sendCertService.sendCertificate($scope.cert.id,$scope.selectedRecipientId,function(result){$scope.sendingInProgress=!1,null!==result&&"sent"===result.resultCode?(listCertService.emptyCache(),$location.path($scope.module+"/sent")):$location.path($scope.module+"/fel/couldnotsend")})},$scope.backToViewRecipents=function(){$location.path($scope.module+"/recipients")},$scope.alreadySentToRecipient=function(){if(angular.isObject($scope.cert.filteredStatuses))for(var i=0;i<$scope.cert.filteredStatuses.length;i++)if("SENT"===$scope.cert.filteredStatuses[i].type&&$scope.cert.filteredStatuses[i].target===$scope.selectedRecipientId)return!0;return!1},$scope.backToViewCertificate=function(){$location.path($scope.module+"/view/"+$scope.cert.id).search({})},void($scope.pagefocus=!0)):void $location.path($scope.module+"/fel/certnotfound")}]),angular.module("common").directive("message",["$log","$rootScope","common.messageService",function($log,$rootScope,messageService){"use strict";return{restrict:"EA",scope:{key:"@",param:"=",params:"="},replace:!0,template:'<span ng-bind-html="resultValue"></span>',link:function(scope,element,attr){var result;attr.$observe("key",function(interpolatedKey){var useLanguage,normalizedKey=angular.lowercase(interpolatedKey);if(useLanguage="undefined"!=typeof attr.lang?attr.lang:$rootScope.lang,result=messageService.getProperty(normalizedKey,useLanguage,attr.fallback,"undefined"!=typeof attr.fallbackDefaultLang),"undefined"!=typeof scope.param)$log.debug(scope.param),result=result.replace("%0",scope.param);else if("undefined"!=typeof scope.params)for(var myparams=scope.params,i=0;i<myparams.length;i++)result=result.replace("%"+i,myparams[i]);scope.resultValue=result})}}}]),angular.module("common").filter("BoolToTextFilter",function(){"use strict";return function(input){return input===!0?"common.yes":"common.no"}}),angular.module("common").factory("common.certificateService",["$http","$log",function($http,$log){"use strict";function _getCertificate(id,onSuccess,onError){$log.debug("_getCertificate id:"+id);var restPath="/moduleapi/certificate/"+id;$http.get(restPath).success(function(data){$log.debug("_getCertificate data:"+data),onSuccess(data)}).error(function(data,status){$log.error("error "+status),onError(data)})}return{getCertificate:_getCertificate}}]),angular.module("common").factory("common.dialogService",["$modal","$window",function($modal,$window){"use strict";function _showErrorMessageDialog(message,callback){$window.doneLoading=!1;var msgbox=$modal.open({templateUrl:"/web/webjars/common/minaintyg/js/services/dialogServiceErrorTemplate.html",controller:["$scope","$modalInstance","bodyText",function($scope,$modalInstance,bodyText){$scope.bodyText=bodyText}],resolve:{bodyText:function(){return angular.copy(message)}}});msgbox.result.then(function(result){$window.doneLoading=!0,callback&&callback(result)},function(){})}function _showDialog(scope,options){if($window.doneLoading=!1,scope.dialog={acceptprogressdone:!0,focus:!1,errormessageid:"",showerror:!1},scope.dialog.errormessageid=scope.dialog.errormessageid?scope.dialog.errormessageid:"common.error.cantconnect",void 0===options.dialogId)throw"dialogId must be specified";options.bodyText=void 0===options.bodyText?"":options.bodyText,options.button1text=void 0===options.button1text?"common.ok":options.button1text,options.button2text=void 0===options.button2text?"common.cancel":options.button2text,options.button3text=void 0===options.button3text?void 0:options.button3text,options.button3visible=void 0===options.button3visible?void 0!==options.button3text:options.button3visible,options.button1id=void 0===options.button1id?"button1"+options.dialogId:options.button1id,options.button2id=void 0===options.button2id?"button2"+options.dialogId:options.button2id,options.button3id=void 0===options.button3id?"button3"+options.dialogId:options.button3id,options.autoClose=void 0===options.autoClose?!0:options.autoClose,options.templateUrl=void 0===options.templateUrl?"/views/partials/common-dialog.html":options.templateUrl,options.model=void 0===options.model?void 0:options.model;var DialogInstanceCtrl=["$scope","$modalInstance","model","dialogId","titleId","bodyTextId","bodyText","button1id","button2id","button3id","button1click","button2click","button3click","button3visible","button1text","button2text","button3text","autoClose",function($scope,$modalInstance,model,dialogId,titleId,bodyTextId,bodyText,button1id,button2id,button3id,button1click,button2click,button3click,button3visible,button1text,button2text,button3text,autoClose){$scope.model=model,$scope.dialogId=dialogId,$scope.titleId=titleId,$scope.bodyTextId=bodyTextId,$scope.bodyText=bodyText,$scope.button1click=function(result){button1click(),autoClose&&$modalInstance.close(result)},$scope.button2click=function(){button2click&&button2click(),$modalInstance.dismiss("button2 dismiss")},$scope.button3visible=button3visible,void 0!==$scope.button3visible?$scope.button3click=function(){button3click&&button3click(),$modalInstance.dismiss("button3 dismiss")}:$scope.button3visible=!1,$scope.button1text=button1text,$scope.button2text=button2text,$scope.button3text=button3text,$scope.button1id=button1id,$scope.button2id=button2id,$scope.button3id=button3id}],msgbox=$modal.open({scope:scope,templateUrl:options.templateUrl,controller:DialogInstanceCtrl,resolve:{model:function(){return options.model},dialogId:function(){return angular.copy(options.dialogId)},titleId:function(){return angular.copy(options.titleId)},bodyTextId:function(){return angular.copy(options.bodyTextId)},bodyText:function(){return angular.copy(options.bodyText)},button1id:function(){return angular.copy(options.button1id)},button2id:function(){return angular.copy(options.button2id)},button3id:function(){return angular.copy(options.button3id)},button1click:function(){return options.button1click},button2click:function(){return options.button2click},button3click:function(){return options.button3click},button1text:function(){return angular.copy(options.button1text)},button2text:function(){return angular.copy(options.button2text)},button3text:function(){return angular.copy(options.button3text)},button3visible:function(){return angular.copy(options.button3visible)},autoClose:function(){return angular.copy(options.autoClose)}}});return msgbox.result.then(function(result){$window.doneLoading=!0,options.callback&&options.callback(result)},function(){}),msgbox}return{showErrorMessageDialog:_showErrorMessageDialog,showDialog:_showDialog}}]),angular.module("common").provider("common.http403ResponseInterceptor",function(){"use strict";this.config={redirectUrl:"/"},this.setRedirectUrl=function(url){this.config.redirectUrl=url},this.$get=["$q","$window",function($q,$window){function interceptorImpl(promise){return promise.then(function(response){return response},function(response){return 403===response.status&&($window.location.href=config.redirectUrl),$q.reject(response)})}var config=this.config;return interceptorImpl}]}),angular.module("common").factory("common.httpRequestInterceptorCacheBuster",["$q",function($q){"use strict";return{request:function(config){if(-1===config.url.indexOf(".html")){var sep=-1===config.url.indexOf("?")?"?":"&";config.url=config.url+sep+"cacheSlayer="+(new Date).getTime()}return config||$q.when(config)}}}]),angular.module("common").factory("common.messageService",["$rootScope",function($rootScope){"use strict";function _getProperty(key,language,defaultValue,fallbackToDefaultLanguage){var value;return"undefined"==typeof language&&(language=$rootScope.lang),value=_getPropertyInLanguage(language,key),"undefined"==typeof value&&(fallbackToDefaultLanguage&&(value=_getPropertyInLanguage($rootScope.DEFAULT_LANG,key)),"undefined"==typeof value&&(value="undefined"==typeof defaultValue?'[Missing "'+key+'"]':defaultValue)),value}function _getPropertyInLanguage(lang,key){return _checkResources(),_lookupProperty(_messageResources[lang],key)}function _lookupProperty(resources,key){return resources[key]}function _addResources(resources){_checkResources(),angular.extend(_messageResources.sv,resources.sv),angular.extend(_messageResources.en,resources.en)}function _checkResources(){null===_messageResources&&(_messageResources={sv:{"initial.key":"Initial nyckel"},en:{"initial.key":"Initial key"}})}var _messageResources=null;return{getProperty:_getProperty,addResources:_addResources}}]);